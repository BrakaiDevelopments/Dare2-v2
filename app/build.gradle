apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28

    signingConfigs {
        release {
            storeFile file("C:\\Dev\\Android\\KeyStorage\\Dareto.jks")
            storePassword "Battlefield003"
            keyAlias "Dare2"
            keyPassword "Battlefield003"
        }
    }

    defaultConfig {
        applicationId "gr.brakaidevelopments.dare2"
        minSdkVersion 21
        targetSdkVersion 28
        def versionPropsFile = file("${rootProject.projectDir}/app/version.properties")
        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            def code = versionProps['VERSION_CODE'].toInteger() + 1
            versionProps['VERSION_CODE'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
            versionCode code
        } else {
            throw new GradleException("Could not read version.properties!")
        }
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            multiDexEnabled true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            multiDexEnabled true
            zipAlignEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    androidExtensions {
        experimental = true
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'androidx.core:core-ktx:1.2.0-alpha01'
    implementation "com.orhanobut:logger:2.2.0"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "android.arch.work:work-runtime:1.0.1"
    implementation "com.google.android.material:material:1.1.0-alpha06"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0-alpha01"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    kapt 'com.android.databinding:compiler:3.1.4'
    implementation 'com.afollestad.material-dialogs:core:2.8.1'
    implementation 'com.afollestad.material-dialogs:input:2.8.1'
    implementation 'com.afollestad.material-dialogs:datetime:2.8.1'
    implementation 'com.afollestad.material-dialogs:lifecycle:2.8.1'
    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.google.firebase:firebase-auth:17.0.0'
    implementation 'com.firebaseui:firebase-ui-auth:4.3.1'
    implementation 'com.github.ybq:Android-SpinKit:1.2.0'

    implementation 'com.chibatching.kotpref:kotpref:2.7.0'
    // optional, auto initialization module
    implementation 'com.chibatching.kotpref:initializer:2.7.0'
    // optional, support saving enum value and ordinal
    implementation 'com.chibatching.kotpref:enum-support:2.7.0'
    // optional, support saving json string through Gson
    implementation 'com.chibatching.kotpref:gson-support:2.7.0'
    // optional, support LiveData observable preference
    implementation 'com.chibatching.kotpref:livedata-support:2.7.0'

    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.31"


    implementation 'org.koin:koin-android:2.0.0-beta-1'
    implementation 'org.koin:koin-androidx-scope:2.0.0-beta-1'
    implementation 'org.koin:koin-androidx-viewmodel:2.0.0-beta-1'


    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"

    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0'
    implementation 'android.arch.lifecycle:livedata:2.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"

    testImplementation 'androidx.test:core:1.2.0-beta01'
    testImplementation 'junit:junit:4.13-beta-3'
    testImplementation 'org.mockito:mockito-core:2.27.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation('org.koin:koin-test:2.0.0-beta-1') { exclude group: 'org.mockito' }
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation 'androidx.test.ext:junit:1.1.1-beta01'
    testImplementation 'androidx.test.ext:truth:1.1.0'
    testImplementation 'com.google.truth:truth:0.44'

    androidTestImplementation "android.arch.persistence.room:testing:1.1.1"
    androidTestImplementation('org.koin:koin-test:2.0.0-beta-1') { exclude group: 'org.mockito' }
    androidTestImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'org.mockito:mockito-core:2.27.0'
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"

    androidTestImplementation "androidx.test:runner:1.1.1"
    androidTestImplementation "androidx.test:rules:1.1.1"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation 'androidx.test:core:1.2.0-beta01'

//    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.1.1'

    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.1.1'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.1.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.10.0@aar') {
        transitive = true
    }
    implementation project(path: ':domain')
    implementation project(path: ':data')

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}

apply plugin: 'com.google.gms.google-services'